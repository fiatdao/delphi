const ethers = require('ethers');
const { getContractFactory, deployContract, getContractAt } = require('./common.js');

ethers.utils.Logger.setLogLevel(ethers.utils.Logger.levels.ERROR);
const { parseEther: toWei, formatBytes32String: toBytes32 } = ethers.utils;

// requires setting ETH_FROM_KEY and ETH_RPC_URL and a running instance of a network
(async function () {
    const deployer = new ethers.Wallet(process.env.ETH_FROM_KEY, new ethers.providers.JsonRpcProvider(process.env.ETH_RPC_URL));
    const me = await deployer.getAddress();

    console.log("START");

    /*const spotPriceFactory = await deployContract('ChainlinkMockProvider', 
        await getContractFactory('src/deploy/ChainlinkMockProvider.sol', 'ChainlinkMockProvider', deployer)
    );*/

    /*const elementFiFactory = await deployContract('FactoryElementFiValueProvider', 
        await getContractFactory('src/factory/FactoryElementFiValueProvider.sol', 'FactoryElementFiValueProvider', deployer)
    );

    const notionalFactory = await deployContract('FactoryNotionalFinanceValueProvider', 
        await getContractFactory('src/factory/FactoryNotionalFinanceValueProvider.sol', 'FactoryNotionalFinanceValueProvider', deployer)
    );

    const yieldFactory = await deployContract('FactoryYieldValueProvider', 
        await getContractFactory('src/factory/FactoryYieldValueProvider.sol', 'FactoryYieldValueProvider', deployer)
    );

    const chainLinkFactory = await deployContract('FactoryChainlinkValueProvider', 
        await getContractFactory('src/factory/FactoryChainlinkValueProvider.sol', 'FactoryChainlinkValueProvider', deployer)
    );

    const aggregatorFactory = await deployContract('FactoryAggregatorOracle', 
        await getContractFactory('src/factory/FactoryAggregatorOracle.sol', 'FactoryAggregatorOracle', deployer)
    );

    const discountRateFactory = await deployContract('FactoryCollybusDiscountRateRelayer', 
        await getContractFactory('src/factory/FactoryCollybusDiscountRateRelayer.sol', 'FactoryCollybusDiscountRateRelayer', deployer)
    );

    const spotPriceFactory = await deployContract('FactoryCollybusSpotPriceRelayer', 
        await getContractFactory('src/factory/FactoryCollybusSpotPriceRelayer.sol', 'FactoryCollybusSpotPriceRelayer', deployer)
    );
    */

    /*dataStructHelper = await deployContract('GoerliDeployDataHelper', 
        await getContractFactory('src/deploy/GoerliDeploy.sol', 'GoerliDeploy', deployer)
    );

    const dataStructHelper = await deployContract('GoerliDeployDataHelper', 
    await getContractFactory('src/deploy/GoerliDeploy.sol', 'GoerliDeploy', deployer));
    

    var elementFact = "0xc4213f3F2E5e3ba88D3F258A37e7EF0CA8Df27a6";
    var notionalFact = "0xd0865aaC4F88405dd14F3D07846CEe68952FC1B1";
    var yieldFact = "0xea33a9eB0fF7A7f95D992c8C3dd7cE21ccaD3dFe";
    var chainlinkFact = "0x64B87b604DeBDEC693782f07E9C641e1e0ee3F42";
    var aggregatorFact = "0x1987F26e0F33FaEad7100c71F4C19E87F0E8D9Ca";
    var discountRate = "0xEBc1AC0C0F3e3faC509CeA3cc0D5Bf086CB3711b";
    var spotPrice = "0x9D424f1e18A1Ab529886D7d761B49969a9A5dD39";
    
    const factory = await deployContract('Factory', 
        await getContractFactory('src/factory/Factory.sol', 'Factory', deployer),
        elementFact,
        notionalFact,
        yieldFact,
        chainlinkFact,
        aggregatorFact,
        discountRate,
        spotPrice
    );

    const dataStructHelper = await deployContract('SpotPriceDeploy', 
        await getContractFactory('src/deploy/SpotPriceDeploy.sol', 'SpotPriceDeploy', deployer)
    );

    var factoryAddress = "0x2C66257771568015bdeBA879C42a86beffFB96a0";
    var factory = await getContractAt(factoryAddress, 'src/factory/Factory.sol', 'Factory', deployer)

    var collybusAddress = "0x5438Fd8541135676e990295C1cd62EF779b05Ebb";
    var bytes = "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000006c000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000025800000000000000000000000000000000000000000000000002c68af0bb14000000000000000000000000000000000000000000000000000000000000000000e04294005520c453eb8fa66f53042cfc79707855c400020000000000000000009a00000000000000000000000065748e8287ce4b9e6d83ee8534319588515503110000000000000000000000004294005520c453eb8fa66f53042cfc79707855c400000000000000000000000078deca24cba286c0f8d56370f5406b48cfce2f86000000000000000000000000dcf80c068b7ffdf7273d8adae4b076bf384f711a00000000000000000000000000000000000000000000000000000000d1ddc0c10000000000000000000000000000000000000000000000000000000062f41bd800000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000025800000000000000000000000000000000000000000000000002c68af0bb14000000000000000000000000000000000000000000000000000000000000000000e04294005520c453eb8fa66f53042cfc79707855c400020000000000000000009a00000000000000000000000065748e8287ce4b9e6d83ee8534319588515503110000000000000000000000004294005520c453eb8fa66f53042cfc79707855c400000000000000000000000078deca24cba286c0f8d56370f5406b48cfce2f86000000000000000000000000dcf80c068b7ffdf7273d8adae4b076bf384f711a00000000000000000000000000000000000000000000000000000000d1ddc0c10000000000000000000000000000000000000000000000000000000062f41bd800000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000025800000000000000000000000000000000000000000000000002c68af0bb14000000000000000000000000000000000000000000000000000000000000000000e04294005520c453eb8fa66f53042cfc79707855c400020000000000000000009a000000000000000000000000a8414c1bb6c1e96e252692008641bba21b9e6e590000000000000000000000001ca5a41af9043d2d1f50c2fc6b49e1f9d22170aa00000000000000000000000078deca24cba286c0f8d56370f5406b48cfce2f86000000000000000000000000dcf80c068b7ffdf7273d8adae4b076bf384f711a00000000000000000000000000000000000000000000000000000000d1ddc0c10000000000000000000000000000000000000000000000000000000062f41bd8";

    console.log(await factory.deployDiscountRateArchitecture(bytes,collybusAddress));

    const dataStructHelper = await deployContract('GoerliDeployDataHelper', 
    await getContractFactory('src/deploy/GoerliDeploy.sol', 'GoerliDeploy', deployer));
*/


    console.log("END");
})();